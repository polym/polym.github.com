<div class="row">
<div class="span1 votecell">
<div class="vote">
<strong>
06
</strong>
<p>
05/2014
</p>
</div>
</div>
<div class="span8">
<div class="post-text">
<a href="/blog/PSO_Algorithm.html"><h1>PSO粒子群算法</h1></a>
<hr>

<h2>1、基本概念</h2>
<p>粒子群算法(Particle Swarm Optimization, PSO)，是由J.Kenndey和R.C.Eberhart等于1995年开发的一种演化计算技术，来源于一个简化社会模型的模拟。PSO算法最初是为了图形化的模拟鸟群优美而不可预测的运动。而通过对动物社会行为的观察，发现在群体中对信息的社会共享提供一个演化的优势，并以此作为开发算法。通过加入近邻的速度匹配、并考虑了多维搜索和根据距离加速，形成了PSO的最初版本。之后引入惯性权重w来控制飞行的趋势，形成标准版本。</p>
<h2>2、算法的精髓</h2>
<ul>
<li>对于一个多维的问题，通过PSO算法后，最优解即为全局最优解(gbest)。</li>
<li>随机初始化，粒子的位置与速度。</li>
<li>迭代更新个体自身所经历的最优解以及群体全局的最优解。</li>
<li>移动状态转移方程：
<code>vid = w * vid + c1 * rand() * (pid - xid) + c2 * rand() * (pgd - xid)
xid = xid+vid</code></li>
</ul>
<h2>3、算法的流程</h2>
<p><code>Step 1：初始化一群粒子（群体规模为m），包括随机位置与速度
Step 2：评价每个粒子的适应度
Step 3: 对于每个粒子，将其适应值与其经历过的最好位置pbest作比较，如果较好，则将其作为当前的最好位置pbest
Step 4：对于每个粒子，将其适应值与全局所经历的最好位置gbest作比较，如果较好，则重新设置gbest的索引号
Step 5：根据移动状态转移方程更新每个粒子的位置与速度
Step 6：如未达到结束条件（通常为足够好的适应值或达到一个预设最大代数Gmax），则返回Step 2</code>
<a href="/attach/PSO_algo.py.x">python实现代码</a></p>
</div>
</div>
</div>
<div class="row">
<div class="span1 votecell">
<div class="vote">
<strong>
06
</strong>
<p>
05/2014
</p>
</div>
</div>
<div class="span8">
<div class="post-text">
<a href="/blog/Blog_Building.html"><h1>github+shell+mkdown 搭建静态博客</h1></a>
<hr>

<h2>1、背景</h2>
<h3>github - 展示平台</h3>
<p>基于git的一个开放的代码托管平台。开始接触git已经是大三的事了，不得不感慨下，大学生活啊。大一大二每天平均8节课的状态，与高中无异，学了些基础的课程。大三开始逐渐发现自己的水平仅仅停留在理论的水平，没有实践理论又有何用啊。题外话哈~~~ 使用github，最初的目的只是为了维护一些算法实现代码。支持web修改增加代码文件，十分方面了。</p>
<h3>shell - 著名的脚本语言</h3>
<p>选择shell的原因：简单粗暴而且我有一定实践基础。shell在搭建静态博客的过程中主要起到的是后台支撑的作用，处理一些简单的文件操作。实践经验，还要归功于在亚信实习的这段时间，接触了shell脚本，学到了很多。虽然离开公司了，但是还是感激不尽啊，想念你们同事~~</p>
<h3>mkdown - 轻量级的标记语言</h3>
<p>十分方便的一种语言，无需关心最终的排版方式。在很长一段时间里，我十分讨厌写文档，对齐、字体大小、间距等一直困扰着我。自从在github上发现了mkdown之后，我一下子就爱上它了，perfect！！！</p>
<h2>2、具体架构</h2>
<p>开始说架构之前，我不得不先承认个事实，那就是我在搭这个博客之前，完全没有网页前端的基础。以下只是我个人的一些想法跟做法，还不知道可不科学。</p>
<h3>如何把mkdown转换成html？</h3>
<p>强大的python有个mkdown模块是专门用来将mkdown文本转化成html格式的。只需要自己加上&lt;head>就可以了。</p>
<h3>如何将html展现？</h3>
<p>如何将html以最为令人赏心悦目的方式展现出来呢？这就只能依靠css来进行排版。完全不会css啊，how to play？<em>最快的方式学会一样东西，就是从模仿开始</em> 查看很多网站以及博客，终于找到了一个自己认为比较舒适的css，于是就拿来用了。也就是现在大家看到的这个布局方式。</p>
<h2>3、总结</h2>
<p>最后做个总结吧。就博客现在这种状态，不得不说有点朴素。但是这却是我花了3天的时间搞的，5555555。能力有限啊。反正这也只是雏形，以后慢慢优化吧...在搭建博客的过程中，对自己完全没有涉猎的领域有了一定的了解，并且自己实现了一把，想想还是有点小激动啊。现在想来不就这么点事？唉，还是太菜~~~中文支持貌似是硬伤，迟早会暴露的，抽空去看点字符集的知识。</p>
</div>
</div>
</div>
<div class="row">
<div class="span1 votecell">
<div class="vote">
<strong>
01
</strong>
<p>
05/2014
</p>
</div>
</div>
<div class="span8">
<div class="post-text">
<a href="/blog/ACM_GUASS_ALGO.html"><h1>高斯消元 自我小结 （实在无力了）</h1></a>
<hr>

<p>最近两天搞了下高斯消元，真的差点被“搞死”了。在此小结下。</p>
<p>高斯消元，学过线代的，应该都有所耳闻。什么化成“行阶梯形”，然后再化成“行最简行”。在此也对TM老师表示愧疚之情（好像忘掉差不多了）。</p>
<p>言归正传，高斯消元到底可以做些什么？ 我的答案是解线性方程组。AX=B。求解X。此类问题是最典型的。当然还有求秩之类的。求秩方面的运用暂时不做总结。
对于AX=B的线性方程组，如果我们要求解X，我们首先应该确保有解。</p>
<p>解的讨论分一下3种情况：</p>
<ul>
<li>X   无解。系数矩阵的秩 &lt; 扩展矩阵的秩</li>
<li>X   有唯一解。 系数矩阵的秩 == 扩展矩阵的秩  ==  未知数数</li>
<li>X   有无穷多解。系数矩阵的秩  == 扩展矩阵的秩序 &lt; 未知数数</li>
</ul>
</div>
</div>
</div>
<div class="row">
<div class="span1 votecell">
<div class="vote">
<strong>
01
</strong>
<p>
05/2014
</p>
</div>
</div>
<div class="span8">
<div class="post-text">
<a href="/blog/awk_cs.html"><h1>如何在Linux下使用Markdown进行文档工作</h1></a>
<hr>

<blockquote>
<p>awk
using it to modify str more efficient   </p>
</blockquote>
<p><code>awk -F' ' 'BEGIN{print "it"}' '{print $0}' filename</code></p>
</div>
</div>
</div>
<div class="row">
<div class="span1 votecell">
<div class="vote">
<strong>
01
</strong>
<p>
05/2014
</p>
</div>
</div>
<div class="span8">
<div class="post-text">
<a href="/blog/HTML_LEARN.html"><h1>学习HTML+CSS</h1></a>
<hr>

<p>我的博客模板
<code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="utf-8"/&gt;
&lt;title&gt;blog-name&lt;/title&gt;
&lt;link href="/css/github.css" type="text/css" rel="stylesheet"/&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div class="page"&gt;
&lt;div class="clearfix"&gt;
&lt;div class="span8"&gt;
&lt;div class="post-text"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</code></p>
</div>
</div>
</div>
<div class="row">
<div class="span1 votecell">
<div class="vote">
<strong>
01
</strong>
<p>
05/2014
</p>
</div>
</div>
<div class="span8">
<div class="post-text">
<a href="/blog/HAPPY.html"><h1>博客进展</h1></a>
<hr>

<p>博客终于初见模型啊，虽然引用了一些其他网站的元素，但是总体还是靠自己实现的。花了点时间学习了下JS与CSS。感觉还不错。</p>
<p>现在的问题就是vim里面中英文输入法切换十分蛋疼啊。博客还有些小细节需要搞下。主界面需要设计下。</p>
</div>
</div>
</div>
